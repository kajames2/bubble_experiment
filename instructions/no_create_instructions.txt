{% page Introduction %}
{% header Welcome! %}

{% hide CurrentAllocation %}
{% hide BidInput %}
{% hide BidSubmit %}
{% hide BidQueue %}
{% hide BidRetract %}
{% hide AskInput %}
{% hide AskSubmit %}
{% hide AskQueue %}
{% hide AskRetract %}
{% hide Messages %}
{% hide Transactions %}
{% hide TransactionsChart %}

You are about to participate in an experiment.  The amount you earn will depend on both your decisions and the decisions of others in the experiment. Please read the instructions carefully and raise your hand if you have any questions.  Once you have reached the end of the instructions, a button labeled 'Finish' will be activated.  Once all participants in the experiment have clicked 'Finish', we will start the experiment.



{% page Overview %}
{% header Overview %}

In today's experiment you will participate in a series of {% n_periods %} trading periods. In each period, you and the other participants will buy and sell units.



{% page Payment %}
{% header Payment %}
{% set epdtrunc = truncate(eperdollars, 1) %}

Your earnings will be determined by the total profit that you obtain during the experiment. This profit will then be converted into US dollars at an exchange rate of $1 for every {% epdtrunc %} units of profit.

All that you earn is yours to keep, and will be privately paid to you in cash, after today's session.



{% page Time %}
{% header Time Details %}

{% show ExperimentStatus %}

NOTE: Please read through the instructions here in each screen. Try to match the instructions with the display.

In the experiment, each period will have 2 phases: A 'Trading Phase' that lasts {% period_length %} seconds, and a 'Review Phase' that lasts {% review_length %} seconds. The current phase of each period and the remaining time will be displayed on the upper right corner of the screen. There is an example of the clock for the Trading Phase of Period 1 on the upper right corner of the screen. This example is shown so that you can see the location where you will find the time remaining, current phase, and current period during the experiment. Please check it now.

You should take as much time as you want to read the instructions and as much time as you need to understand them.



{% page Allocation %}
{% header Current Allocation %}

{% show CurrentAllocation %}

{% set init_cash = 1500 %}
{% set init_units = 2 %}
{% event SetHoldings(init_cash, init_units) %}

The amount of 'Cash' that you are given at the start of the first Period appears in the 'Current Allocation' area on the upper middle of your screen. For this example, your Cash is {% init_cash %}.

'Shares' are shown in the Current Allocation box below Cash. This is the number of Shares (units) you own plus any units that you have purchased throughout the experiment.

Your Shares are {% init_units %}. Both your Cash and Shares will stay with you throughout TODO!



{% page Dividends %}
{% header Dividends %}

At the end of each period, each Share you own will pay you a random amount in Cash.  The random cash payment will be either 0, 8, 28, or 60 with equal probability.  The payment is the same for all Shares owned by all players in a period.  A new cash random cash payment is determined after each period.


{% page Profit2 %}

To find out how much profit you would make on a particular trade, you can use the mouse to click the 'Price' box in the Profit Calculator area and then type a Price; you will also use the mouse to click the 'Quantity' box in the Profit Calculator area and then type the quantity you are considering buying at that price. Once you enter a Price and Quantity in the input boxes, click on the 'Update' button to see the profits for the Price and Quantity you have entered.

Please enter a Price and Quantity into the Profit Calculator and click the 'Update Table' button now to see how the calculator works.

{% wait_for UserUpdateProfitCalculator() %}



{% page Profit3 %}

{% set calc_price = GetCalculatorPrice() %}
{% set calc_quantity = GetCalculatorQuantity() %}
{% set price_range = GetCalculatorPriceRange() %}
{% set quant_range = GetCalculatorQuantityRange() %}
{% set calc_total_price = Multiply(calc_price, calc_quantity) %}
{% set target_cash = Subtract(init_cash, calc_total_price) %}
{% set target_units = Add(init_units, calc_quantity) %}
{% set target_utility = Utility(target_cash, target_units) %}
{% set utility1 = Subtract(target_utility, init_util) %}

In addition to showing the profit for the Price and Quantity you entered, the Profit Calculator table gives you information on the total profit you would make for prices from {% price_range %} below to {% price_range %} above the price you entered, and for quantities from {% quant_range %} units below to {% quant_range %} units above the quantity you entered. As you can see, if you buy {% calc_quantity %} unit(s) at a price of {% calc_price %} your profit will be {% utility1 %}. The profit for this proposed trade is shown in the Profit Calculator table in blue (unless this proposed trade reduces your total profit, in which case it will be shown in red).



{% page Profit4 %}

{% set buying_quantity = Divide(init_cash, calc_price) %}
{% set buying_quantity = Floor(buying_quantity) %}

If you spend all of your Cash on units of the Commodity, and you pay {% calc_price %} per unit, then you will be able to buy {% buying_quantity %} units of the Commodity. Use the Profit Calculator to determine the profit you will make if you buy {% buying_quantity %} units of the Commodity at a price of {% calc_price %} per unit.



{% page Bids %}
{% header Bids %}

{% show BidInput %}
{% show BidSubmit %}
{% show BidQueue %}

In this experiment, the price at which you offer to buy a unit is called a 'Bid'. A Bid is submitted as a part of the process of negotiating prices. As you have seen in the previous screens that describe the Profit Calculator, the price that you pay for each unit can affect your unit profit. Since the bids that you place may affect the unit price for a unit that you bid on, your bids can also affect your unit profit.

During the Trading Phase of each period, you can submit bids in the area above Submit Bid'. Please enter a Bid now. After you have entered your Bid, please either press the 'Return' key on the keyboard, or click the box labeled 'Submit Bid'.

{% set bid_limit = 9.99 %}
{% set max_first_bid = Subtract(bid_limit, 0.10) %}
{% wait_for bid1 = UserSubmitBidBetween(0.00, max_first_bid) %}



{% page MarketQueue %}
{% header 'Market Queue' Display %}

Your Bid (when you make one) appears in the box to the left of the 'Submit Bid' button. This table lists all Bids currently submitted by all buyers. As you can see you currently have only one Bid.

To see how the screen display changes when another buyer submits an improving Bid, click the 'Next' button.



{% page BidImprovement %}
{% header Bid Improvement %}

{% set bid_overhead = Subtract(bid_limit, bid1) %}
{% set max_increase = Subtract(bid_overhead, 0.05) %}
{% set max_increase = Min(max_increase, 0.10) %}

{% set lower_bid_limit = Add(bid1, 0.01) %}
{% set upper_bid_limit = Add(bid1, max_increase) %}
{% set other_buyer_bid = RandomFloat(lower_bid_limit, upper_bid_limit) %}
{% set other_buyer_bid = Truncate(other_buyer_bid, 2) %}
{% event SubmitComputerBid(other_buyer_bid) %}

If there is at least one Bid in the Market Queue, any new Bid must be GREATER than the current highest Bid in the list (presently {% other_buyer_bid %}). As you can see, some other buyer has submitted a Bid of {% other_buyer_bid %} that is higher than your Bid. Your Bid is displayed in the Market Queue bolded and colored Blue.  All other bids are unbolded and colored Black.

Another buyer now holds the highest Bid. If you submit a Bid that is higher than the current high Bid, then your new Bid will replace your previous Bid.



{% page BidImprovement2 %}

Please enter a new Bid now and either press the 'Return' key or click on Submit Bid to submit your Bid.

{% wait_for replaced_bid UserSubmitBidBetween(other_buyer_bid, 9.98) %}



{% page Messages %}
{% header Messages Display %}

{% show Messages %}

The 'Messages' display at the very bottom of your screen provides temporary feedback whenever you submit a Bid, make a trade, or the period ends or begins.

{% page Messages2 %}

As you can see in the Bid Queue, your previous Bid of {% bid1 %} has now been replaced by the Bid you just submitted, {% replaced_bid %}. Your Cash have not yet changed, since no trade has been completed. You can also see that your Bid was successfully submitted by looking at the message that appeared in your 'Messages' display. 



{% page RetractBid %}
{% header Retract Bid %}

{% show BidRetract %}

You have the option to delete a Bid you have previously submitted. To do this you need to click the Bid as it appears in the Bid Queue. Once your bid is selected, click the 'Retract Bid' button. Please delete your Bid now. 

{% wait_for UserRetractBid() %}



{% page RetractBid2 %}

Please note that your Bid has been deleted from the Bid Queue display.



{% page RetractBid3 %}

Please submit a Bid that is greater than the current highest Bid in the market.

{% wait_for new_bid1 UserSubmitBidBetween(other_buyer_bid, 9.98) %}



{% page Messages3 %}

The Messages display indicates that your Bid has been successfully submitted to the market. You can also see your Bid of {% new_bid1 %} is in the Bid Queue.



{% page Trade %}
{% header Trade %}

{% show AskQueue %}
{% set highest_bid = new_bid1 %}

A trade occurs when either (1) a buyer submits a Bid that is equal to or greater than some seller's Ask, or (2) a seller submits an Ask that is equal to or lower than some buyer's Bid.

An 'Ask' is the price at which a seller wants to sell one unit of the Commodity. Sellers submit 'Asks' to the market, i.e., orders to sell units in the market. Asks are displayed in the Ask Queue directly above the Bid Queue.

In our example, a seller who wants to sell a unit needs to submit an Ask that is equal to or lower than {% highest_bid %} in order to immediately sell a unit. Let's assume that a seller submits an Ask less than your Bid, which is {% highest_bid %}.



{% page Trade2 %}

{% show Transactions %}
{% show TransactionsChart %}
{% event SubmitComputerAsk(highest_bid) %}

The highest Bid was yours, at {% highest_bid %}. You traded at this price with the seller who submitted an Ask less than your Bid. The Transactions History table shows the results of this trade. It shows both the price you traded at, and the profit you gained (or lost).  The Current Allocation area also updates: your Shares increase by one unit, and your Cash decrease by {% highest_bid %}. Moreover, the Messages display informs you that you have made a trade. Only you can see these changes to the Transactions History, Current Allocation, and Messages displays.

Your Bid of {% highest_bid %} has now been removed from the Bid Queue. The 'Market Transaction Prices' graph in the right, which plots the prices of all units traded in the current period, also changed: it shows a trade for one unit at a price equal to {% highest_bid %}. These changes to the graph and Bid Queue are displayed to all buyers and sellers.



{% page Trade3 %}

When a buyer submits a Bid that is equal to or greater than some seller's Ask, a trade occurs at a price equal to the seller's Ask. When a seller submits an Ask that is less than or equal to a buyer's Bid, a trade occurs at a price that is equal to the buyer's Bid.

Press 'Next' to proceed to a short quiz. When you have answered all the quiz questions correctly you will then see a seller make an Ask that generates a trade with the other buyer's Bid.



{% page Trade4 %}
{% event SubmitComputerAsk(other_buyer_bid) %}

As you can see an Ask which was less than other buyer's Bid of {% other_buyer_bid %}, was submitted by some seller and has made a trade with the other buyer's Bid.

You can see the changes in Bid Queue and the Market Transaction Prices graph. The other buyer's Bid has been removed from the Bid Queue as it has made a trade. This trade has been shown in the Market Transaction Prices graph at price of {% other_buyer_bid %}.

We will show one more Ask submitted by some seller. Press 'Next' to see this Ask.



{% page Trade5 %}

{% set other_seller_ask = RandomFloat(bid1, new_bid1) %}
{% set other_seller_ask = Truncate(other_seller_ask, 2) %}
{% event SubmitComputerAsk(other_seller_ask) %}

As you can see, the new Ask of {% other_seller_ask %} from some seller appears in the Ask Queue.

The price is equal to the Ask if you accept a seller's Ask, and it will be equal to your Bid if a seller accepts your Bid. So, if you Bid an amount greater than or equal to the lowest Ask, you will trade at a price equal to the lowest Ask. Any Bid higher than or equal to the current lowest Ask (in this case {% other_seller_ask %}) will generate a trade.



{% page Trade6 %}

In order for you to see how the price is determined when you place a Bid greater than the lowest Ask, please submit a Bid higher than the lowest Ask (which is {% other_seller_ask %}).

{% wait_for bid2 = UserSubmitBidBetween(other_seller_ask, 9.99) %}



{% page Trade7 %}

You have made a trade with the seller whose Ask was {% other_seller_ask %}. The Transactions History table has updated: you have made a trade as a result of your Bid of {% bid2 %}, at a price equal to {% other_seller_ask %}, which was the Ask submitted by the seller. The Current Allocation area also updates: your Shares increase by one unit, and your Cash decrease by {% other_seller_ask %}.

The Ask equal to {% other_seller_ask %} has now been removed from the Ask Queue. Moreover, the Messages display informs you that you have made a trade. The Market Transaction Prices graph in the right, which plots the prices of the units traded in the current period, also changed. It shows three trades for one unit each: one at a price equal to {% highest_bid %}, second at {% other_buyer_bid %}, and the last at a price equal to {% other_seller_ask %}.



{% page PeriodProfit %}
{% header Period Profit Window %}

{% show ReviewDialog %}
{% event AddHistoryRow() %}

At the end of the Trading Phase of each period the 'Period Profit' window pops up automatically. This window displays the profit you have earned in each one of the periods so far. This window disappears automatically whenever a new period starts.



{% page Conclusion %}
{% hide ReviewDialog %}

Caution: The Bids by other buyers and the Asks by sellers in the examples above were generated randomly for illustration purposes. The examples are intended to convey the rules of the market, but NOT intended to suggest how you should make your decisions. 

When you are finished going over the instructions please raise your hand if you would like further explanation. This is the proper time to ask any questions you might have. Otherwise, if you feel that you understand the instructions, please wait until the other participants complete the instructions. Please remain in your seat. We will proceed to the experiment, and will start the first period as soon as everyone has completed the instructions. 
